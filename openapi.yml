openapi: 3.0.1
info:
  title: Deegle Intrac
  description: Deegle Intrac Api
  version: 1.0.0
servers:
- url: https://apid.paguetodo.com/demo/intrac
tags:
- name: currency_exchange_rate
- name: currency_rate
- name: driver
- name: fare
- name: itinerary
- name: line
- name: open
  description: Without Authorization
- name: passenger
- name: payment
- name: reservation
- name: server
- name: short_route_price
- name: stop
- name: terminal
- name: terminal_trip_payment
- name: trip
- name: vehicle
- name: vehicle_owner
- name: vehicle_type
- name: website_email
paths:
  /currency_exchange_rate/all:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /currency_exchange_rate/all_as_json:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /currency_exchange_rate/consistency:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /currency_exchange_rate/count:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /currency_exchange_rate:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - currency_exchange_rate
      summary: Create Currency Exchange Rate
      operationId: post-currency-exchange-rate-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - USD
          - EUR
          - PTR
      - name: rate
        in: query
        required: true
        schema:
          minimum: 0.00
          exclusiveMinimum: true
          type: number
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - currency_exchange_rate
      summary: Create Currency Exchange Rate
      operationId: delete-currency-exchange-rate-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /currency_exchange_rate/download:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /currency_exchange_rate/elastic_mapping:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /currency_exchange_rate/get2:
    get:
      tags:
      - currency_exchange_rate
      operationId: get-currency-exchange-rate-by-realm-currency
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /currency_exchange_rate/report:
    post:
      tags:
      - currency_exchange_rate
      summary: Report
      operationId: post-currency-exchange-rate-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyExchangeRateReportRequest'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /currency_exchange_rate/search:
    post:
      tags:
      - currency_exchange_rate
      operationId: post-currency-exchange-rate-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityCurrencyExchangeRate'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExchangeRate'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /currency_exchange_rate/truncate:
    put:
      tags:
      - currency_exchange_rate
      operationId: put-currency-exchange-rate-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /currency_rate/usd:
    get:
      tags:
      - currency_rate
      summary: Get USD exchange rate
      operationId: get-currency-usd-rate-intrac-get
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /driver/all:
    get:
      tags:
      - driver
      operationId: get-driver-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /driver/all_as_json:
    get:
      tags:
      - driver
      operationId: get-driver-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /driver/consistency:
    get:
      tags:
      - driver
      operationId: get-driver-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /driver/count:
    get:
      tags:
      - driver
      operationId: get-driver-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /driver/count_report:
    post:
      tags:
      - driver
      operationId: get-driver-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /driver:
    put:
      tags:
      - driver
      summary: Update Driver
      operationId: put-driver-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - driver
      summary: Create Driver
      operationId: post-driver-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - driver
      summary: Delete Driver
      operationId: delete-driver-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /driver/line/{line_id}:
    get:
      tags:
      - driver
      operationId: get-driver-from-terminal-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - driver
      summary: Update Driver from terminal
      operationId: put-driver-from-terminal-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - driver
      summary: Create Driver from terminal
      operationId: post-driver-from-terminal-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - driver
      summary: Delete Driver from terminal
      operationId: delete-driver-from-terminal-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /driver/download:
    get:
      tags:
      - driver
      operationId: get-driver-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /driver/elastic_mapping:
    get:
      tags:
      - driver
      operationId: get-driver-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /driver/get2:
    get:
      tags:
      - driver
      operationId: get-driver-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /driver/report/line:
    post:
      tags:
      - driver
      summary: Line Report
      operationId: post-line-driver-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /driver/report:
    post:
      tags:
      - driver
      summary: Report
      operationId: post-report-driver-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /driver/search:
    post:
      tags:
      - driver
      operationId: post-driver-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityDriver'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /driver/truncate:
    put:
      tags:
      - driver
      operationId: put-driver-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /fare/all:
    get:
      tags:
      - fare
      operationId: get-fare-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/all_as_json:
    get:
      tags:
      - fare
      operationId: get-fare-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/consistency:
    get:
      tags:
      - fare
      operationId: get-fare-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /fare/count:
    get:
      tags:
      - fare
      operationId: get-fare-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /fare/count_report:
    post:
      tags:
      - fare
      operationId: get-fare-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FareReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /fare:
    get:
      tags:
      - fare
      operationId: get-fare
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - fare
      summary: Update Fare
      operationId: put-fare-intrac-update-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FareRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - fare
      summary: Create Fare
      operationId: post-fare-intrac-create-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: start_stop_code
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: destination_stop_code
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FareRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - fare
      summary: Delete Fare
      operationId: delete-fare-intrac-delete-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/csv_file:
    get:
      tags:
      - fare
      operationId: get-csv-file-fare-intrac-get-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
    post:
      tags:
      - fare
      summary: Get Csv File
      operationId: post-csv-file-fare-intrac-get-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeegleIntracFareToTextFileRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/download:
    get:
      tags:
      - fare
      operationId: get-fare-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /fare/elastic_mapping:
    get:
      tags:
      - fare
      operationId: get-fare-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /fare/line/{line_id}:
    get:
      tags:
      - fare
      operationId: get-fare-by-line-intrac-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/get2:
    get:
      tags:
      - fare
      operationId: get-fare-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/get3:
    get:
      tags:
      - fare
      operationId: get-fare-by-realm-business-id-vehicle-type-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/line/report:
    post:
      tags:
      - fare
      summary: Line Report
      operationId: post-line-fare-report-intrac-report-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FareReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /fare/report:
    post:
      tags:
      - fare
      summary: Report
      operationId: post-report-fare-intrac-report-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FareReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /fare/search:
    post:
      tags:
      - fare
      operationId: post-fare-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityFare'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fare'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /fare/truncate:
    put:
      tags:
      - fare
      operationId: put-fare-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /itinerary/all:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /itinerary/all_as_json:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /itinerary/consistency:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /itinerary/count:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /itinerary/count_report:
    post:
      tags:
      - itinerary
      operationId: get-itinerary-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItineraryReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /itinerary:
    get:
      tags:
      - itinerary
      operationId: get-itinerary
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - itinerary
      summary: Create Itinerary
      operationId: put-itinerary-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: name
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
      - name: active
        in: query
        schema:
          type: boolean
          default: true
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
      - name: short_route_rate
        in: query
        schema:
          type: number
      - name: short_route_rate_currency
        in: query
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - itinerary
      summary: Create Itinerary
      operationId: post-itinerary-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: name
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
      - name: active
        in: query
        schema:
          type: boolean
          default: true
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
      - name: short_route_rate
        in: query
        schema:
          type: number
      - name: short_route_rate_currency
        in: query
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - itinerary
      operationId: delete-itinerary-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /itinerary/download:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /itinerary/elastic_mapping:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /itinerary/line/{line_id}:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-by-line-intrac
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
  /itinerary/get2:
    get:
      tags:
      - itinerary
      operationId: get-itinerary-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /itinerary/csv_file:
    post:
      tags:
      - itinerary
      summary: Get Csv File
      operationId: post-csv-file-itinerary-intrac-get-com.deegle.intrac.api.handler
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeegleIntracItineraryToTextFileRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /itinerary/line/report:
    post:
      tags:
      - itinerary
      summary: Line Report
      operationId: post-line-itinerary-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItineraryReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /itinerary/report:
    post:
      tags:
      - itinerary
      summary: Report
      operationId: post-report-itinerary-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItineraryReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /itinerary/search:
    post:
      tags:
      - itinerary
      operationId: post-itinerary-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityItinerary'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Itinerary'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /itinerary/truncate:
    put:
      tags:
      - itinerary
      operationId: put-itinerary-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /line/all:
    get:
      tags:
      - line
      operationId: get-line-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /line/all_as_json:
    get:
      tags:
      - line
      operationId: get-line-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /line/change_line:
    put:
      tags:
      - line
      summary: Change Line ID
      operationId: put-change-line-id-intrac-line-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: old_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: new_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            '*/*': {}
  /line/consistency:
    get:
      tags:
      - line
      operationId: get-line-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /line/count:
    get:
      tags:
      - line
      operationId: get-line-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /line:
    get:
      tags:
      - line
      operationId: get-line
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - line
      summary: Update Line
      operationId: put-line-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - line
      summary: Create Line
      operationId: post-line-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - line
      summary: Delete Line
      operationId: delete-line-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /line/download:
    get:
      tags:
      - line
      operationId: get-line-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /line/elastic_mapping:
    get:
      tags:
      - line
      operationId: get-line-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /line/get2:
    get:
      tags:
      - line
      operationId: get-line-by-realm
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /line/payment_aggregation:
    post:
      tags:
      - line
      summary: Payment Aggregation
      operationId: post-payments-aggregation-intrac-line-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationPaymentAggregateRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /line/search:
    post:
      tags:
      - line
      operationId: post-line-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityLine'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /line/truncate:
    put:
      tags:
      - line
      operationId: put-line-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /open/reservation/add_payments:
    put:
      tags:
      - open
      summary: Add Payments to Reservation
      operationId: put-open-reservation-add-payments-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          '*/*':
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/NotificationPaymentRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /open/reservation:
    get:
      tags:
      - open
      summary: Get Reservation
      operationId: get-open-reservation-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - open
      summary: Create Reservation
      operationId: post-open-reservation-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/PassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /open/reservation/{sequence}:
    get:
      tags:
      - open
      summary: Get Reservation
      operationId: get-open-reservation-by-sequence-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /open/currency_exchange_rates:
    get:
      tags:
      - open
      summary: Get currency exchange rates
      operationId: get-open-currency-exchange-rates-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /open/line/charge_methods:
    get:
      tags:
      - open
      summary: Get Line Charge Methods
      operationId: get-open-line-charge-methods-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Line'
  /open/usd_exchange_rate:
    get:
      tags:
      - open
      summary: Get USD exchange rate
      operationId: get-open-usd-exchange-rate-intrac-get
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /open/stop/report:
    post:
      tags:
      - open
      summary: Open Stop Report
      operationId: post-open-report-stop-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
  /open/trip/report:
    post:
      tags:
      - open
      summary: Open Trip Report
      operationId: post-open-report-trip-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenTripReportRequest'
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
  /passenger/all:
    get:
      tags:
      - passenger
      operationId: get-passenger-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
  /passenger/all_as_json:
    get:
      tags:
      - passenger
      operationId: get-passenger-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
  /passenger/consistency:
    get:
      tags:
      - passenger
      operationId: get-passenger-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/count:
    get:
      tags:
      - passenger
      operationId: get-passenger-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/count_report:
    post:
      tags:
      - passenger
      operationId: get-passenger-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /passenger/delete_passenger_without_reservation:
    get:
      tags:
      - passenger
      operationId: put-passenger-delete-passenger-without-reservation-intrac-update
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/download:
    get:
      tags:
      - passenger
      operationId: get-passenger-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /passenger/elastic_mapping:
    get:
      tags:
      - passenger
      operationId: get-passenger-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger:
    get:
      tags:
      - passenger
      operationId: get-passenger
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
  /passenger/get2:
    get:
      tags:
      - passenger
      operationId: get-passenger-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
  /passenger/get3:
    get:
      tags:
      - passenger
      operationId: get-passenger-by-realm-business-id-trip-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
  /passenger/get4:
    get:
      tags:
      - passenger
      operationId: get-passenger-by-realm-business-id-trip-id-itinerary-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
  /passenger/by_reservation_sequence/{sequence}:
    get:
      tags:
      - passenger
      summary: Get Passengers of Reservation by sequence
      operationId: get-by-reservation-sequence-passengers-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /passenger/by_trip_sequence/{sequence}:
    get:
      tags:
      - passenger
      summary: Get Passengers of Trip by sequence
      operationId: get-by-trip-sequence-passengers-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /passenger/passenger_fares:
    get:
      tags:
      - passenger
      summary: Get Passenger Fares
      operationId: get-passenger-fares-from-trip-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/passenger_fares/{line_id}:
    get:
      tags:
      - passenger
      summary: Get Passenger Fares from terminal
      operationId: get-passenger-fares-from-trip-from-terminal-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/passenger_type_count_from_trip/{sequence}:
    get:
      tags:
      - passenger
      summary: Get Count of Passengers from Trip by sequence
      operationId: get-passenger-type-count-from-trip-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/line/report:
    post:
      tags:
      - passenger
      summary: Line Report
      operationId: post-line-passenger-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/report:
    post:
      tags:
      - passenger
      summary: Report
      operationId: post-report-passenger-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/reservation/report:
    post:
      tags:
      - passenger
      summary: Reservation Report
      operationId: post-reservation-passenger-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: reservation_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/search:
    post:
      tags:
      - passenger
      operationId: post-passenger-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityPassenger'
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
  /passenger/update_reservation_status:
    get:
      tags:
      - passenger
      operationId: put-passenger-update-reservation-status-intrac-update
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/transfer:
    put:
      tags:
      - passenger
      summary: Transfer Passengers
      operationId: put-transfer-passenger-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferPassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /passenger/transfer/line/{line_id}:
    put:
      tags:
      - passenger
      summary: Transfer Passengers from terminal
      operationId: put-transfer-passenger-from-terminal-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferPassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /passenger/trip/report:
    post:
      tags:
      - passenger
      summary: Trip Report
      operationId: post-trip-passenger-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/trip/report/{line_id}:
    post:
      tags:
      - passenger
      summary: Trip Report
      operationId: post-trip-passenger-report-alternative-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/truncate:
    put:
      tags:
      - passenger
      operationId: put-passenger-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /passenger/status:
    put:
      tags:
      - passenger
      summary: Update Passenger Status
      operationId: put-passenger-change-status-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: status
        in: query
        required: true
        schema:
          type: string
          enum:
          - PRE_BOARDING
          - TRANSFERRED
          - BOARDING
          - OUT_INSIDE
          - OUT_OUTSIDE
          - DID_NOT_SHOWED_UP
          - CHANGED_TICKET
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /passenger/info:
    put:
      tags:
      - passenger
      summary: Update Passenger Info
      operationId: put-passenger-info-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /passenger/info/terminal/{line_id}:
    put:
      tags:
      - passenger
      summary: Update Passenger Info From Terminal
      operationId: put-passenger-info-from-terminal-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Passenger'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /payment/aggregation:
    post:
      tags:
      - payment
      operationId: post-payments-aggregations-full-read
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: base_currency
        in: query
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationPaymentAggregateRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment/all:
    get:
      tags:
      - payment
      operationId: get-payment-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/all_as_json:
    get:
      tags:
      - payment
      operationId: get-payment-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/consistency:
    get:
      tags:
      - payment
      operationId: get-payment-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment/count:
    get:
      tags:
      - payment
      operationId: get-payment-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment/count_report:
    post:
      tags:
      - payment
      operationId: get-payment-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /payment/download:
    get:
      tags:
      - payment
      operationId: get-payment-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /payment/elastic_mapping:
    get:
      tags:
      - payment
      operationId: get-payment-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment:
    get:
      tags:
      - payment
      operationId: get-payment
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: reservation_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/get2:
    get:
      tags:
      - payment
      operationId: get-payment-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/get3:
    get:
      tags:
      - payment
      operationId: get-payment-by-realm-business-id-itinerary-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/get4:
    get:
      tags:
      - payment
      operationId: get-payment-by-realm-business-id-itinerary-id-trip-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/get5:
    get:
      tags:
      - payment
      operationId: get-payment-by-realm-business-id-itinerary-id-trip-id-reservation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: reservation_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/line_aggregation:
    post:
      tags:
      - payment
      operationId: post-line-payments-aggregations-full-read
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: base_currency
        in: query
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationPaymentAggregateRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment/terminal/line_aggregation:
    post:
      tags:
      - payment
      operationId: post-line-payments-aggregations-full-from-terminal-read
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: base_currency
        in: query
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationPaymentAggregateRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment/line/report:
    post:
      tags:
      - payment
      summary: Line Report
      operationId: post-line-payments-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment/report:
    post:
      tags:
      - payment
      summary: Report
      operationId: post-report-payments-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /payment/search:
    post:
      tags:
      - payment
      operationId: post-payment-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityPayment'
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
  /payment/truncate:
    put:
      tags:
      - payment
      operationId: put-payment-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/ticket/add_payments:
    put:
      tags:
      - reservation
      summary: Add Ticket Payments
      operationId: put-reservation-intrac-validation-add-payments-ticket
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketPaymentRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/all:
    get:
      tags:
      - reservation
      operationId: get-reservation-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /reservation/all_as_json:
    get:
      tags:
      - reservation
      operationId: get-reservation-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /reservation/cancel:
    put:
      tags:
      - reservation
      summary: Cancel Reservation
      operationId: put-reservation-intrac-cancel
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/consistency:
    get:
      tags:
      - reservation
      operationId: get-reservation-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/count:
    get:
      tags:
      - reservation
      operationId: get-reservation-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/count_report:
    post:
      tags:
      - reservation
      operationId: get-reservation-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /reservation:
    get:
      tags:
      - reservation
      operationId: get-reservation
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    post:
      tags:
      - reservation
      summary: Create Reservation
      operationId: post-reservation-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/PassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - reservation
      summary: Delete Reservation
      operationId: delete-reservation-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: check
        in: query
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/fast_entry:
    post:
      tags:
      - reservation
      summary: Create Reservation Fast Entry
      operationId: post-reservation-intrac-create-fast-entry-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              type: array
              items:
                $ref: '#/components/schemas/PassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/fast_entry/{line_id}:
    post:
      tags:
      - reservation
      summary: Create Reservation Fast Entry from Terminal
      operationId: post-reservation-intrac-create-fast-entry-from-terminal-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/PassengerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/delete_payments:
    put:
      tags:
      - reservation
      summary: Delete Payments
      operationId: put-reservation-intrac-delete-payments
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/DeletePaymentRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/delete_reservations_by_sequence:
    put:
      tags:
      - reservation
      summary: Delete Reservations by sequence
      operationId: put-reservation-intrac-delete-reservations-by-sequence
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                type: integer
                format: int64
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/download:
    get:
      tags:
      - reservation
      operationId: get-reservation-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /reservation/elastic_mapping:
    get:
      tags:
      - reservation
      operationId: get-reservation-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/get2:
    get:
      tags:
      - reservation
      operationId: get-reservation-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /reservation/get3:
    get:
      tags:
      - reservation
      operationId: get-reservation-by-realm-business-id-itinerary-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /reservation/get4:
    get:
      tags:
      - reservation
      operationId: get-reservation-by-realm-business-id-itinerary-id-trip-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /reservation/by_sequence/{sequence}:
    get:
      tags:
      - reservation
      summary: Get Reservation by sequence
      operationId: get-reservation-by-sequence-counter-intrac-reservation-get-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/by_trip_sequence/{sequence}:
    get:
      tags:
      - reservation
      summary: Get Reservations by Trip sequence
      operationId: get-reservation-by-trip-sequence-counter-intrac-reservation-get-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/sequence:
    get:
      tags:
      - reservation
      summary: Get Reservation Sequence
      operationId: get-sequence-counter-intrac-reservation-get-operation-id
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /reservation/line_aggregation:
    post:
      tags:
      - reservation
      operationId: post-reservation-intrac-line-aggregation-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationPaymentAggregateRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/line/report:
    post:
      tags:
      - reservation
      summary: Line Report
      operationId: post-line-reservation-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/report:
    post:
      tags:
      - reservation
      summary: Report
      operationId: post-report-reservation-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/search:
    post:
      tags:
      - reservation
      operationId: post-reservation-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityReservation'
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /reservation/truncate:
    put:
      tags:
      - reservation
      operationId: put-reservation-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/update_amount_converted:
    get:
      tags:
      - reservation
      operationId: get-reservation-intrac-update-amount-converted-operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /reservation/validate_payments:
    put:
      tags:
      - reservation
      summary: Validate Payments
      operationId: put-reservation-intrac-validation-payments
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationPaymentValidationRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /reservation/ves_payments:
    post:
      tags:
      - reservation
      operationId: post-reservation-intrac-ves-payments-aggregation-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationPaymentAggregateRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /server/check_trip_seats:
    get:
      tags:
      - server
      summary: Check Trip Seats
      operationId: get-check-trip-seats-server-intrac-get-operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /server/schema:
    get:
      tags:
      - server
      summary: Get Schema
      operationId: get-schema-server-intrac-get
      responses:
        default:
          description: default response
          content:
            application/json: {}
    post:
      tags:
      - server
      summary: Create Schema
      operationId: post-schema-server-intrac-create
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /server/log_file:
    get:
      tags:
      - server
      summary: Log file
      operationId: get-log-file-server-intrac-get
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /server/save_payments:
    get:
      tags:
      - server
      summary: Save Payments
      operationId: get-save-reservation-payments-server-intrac-get-operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /server/update_missing_fields:
    get:
      tags:
      - server
      summary: Update Missing Fields
      operationId: get-missing-fields-trip-reservation-passenger-server-intrac-update
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /server/update_trip_seats:
    get:
      tags:
      - server
      summary: Update Trip Seats
      operationId: put-update-trip-seats-server-intrac-update-operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /short_route_price/all:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortRoutePrice'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /short_route_price/all_as_json:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortRoutePrice'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /short_route_price/consistency:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /short_route_price/count:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /short_route_price:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price_1
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortRoutePrice'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - short_route_price
      summary: Create ShortRoutePrice
      operationId: post-short-route-price-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      requestBody:
        content:
          text/plain:
            schema:
              type: number
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortRoutePrice'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - short_route_price
      operationId: get-short-route-price
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortRoutePrice'
  /short_route_price/download:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /short_route_price/elastic_mapping:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /short_route_price/get2:
    get:
      tags:
      - short_route_price
      operationId: get-short-route-price-by-realm-currency
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: currency
        in: query
        required: true
        schema:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortRoutePrice'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /short_route_price/report:
    post:
      tags:
      - short_route_price
      summary: Report
      operationId: post-report-short-route-price-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShortRoutePriceReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /short_route_price/search:
    post:
      tags:
      - short_route_price
      operationId: post-short-route-price-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityShortRoutePrice'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShortRoutePrice'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /short_route_price/truncate:
    put:
      tags:
      - short_route_price
      operationId: put-short-route-price-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /stop/all:
    get:
      tags:
      - stop
      operationId: get-stop-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /stop/all_as_json:
    get:
      tags:
      - stop
      operationId: get-stop-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /stop/consistency:
    get:
      tags:
      - stop
      operationId: get-stop-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /stop/count:
    get:
      tags:
      - stop
      operationId: get-stop-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /stop:
    get:
      tags:
      - stop
      operationId: get-stop
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: code
        in: query
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - stop
      summary: Update Stop
      operationId: put-stop-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: code
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - stop
      summary: Create Stop
      operationId: post-stop-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: code
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - stop
      operationId: delete-stop-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: code
        in: query
        required: true
        schema:
          minLength: 1
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /stop/download:
    get:
      tags:
      - stop
      operationId: get-stop-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /stop/elastic_mapping:
    get:
      tags:
      - stop
      operationId: get-stop-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /stop/get2:
    get:
      tags:
      - stop
      operationId: get-stop-by-realm-country
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: country
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /stop/search:
    post:
      tags:
      - stop
      operationId: post-stop-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityStop'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /stop/truncate:
    put:
      tags:
      - stop
      operationId: put-stop-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal/all:
    get:
      tags:
      - terminal
      operationId: get-terminal-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
  /terminal/all_as_json:
    get:
      tags:
      - terminal
      operationId: get-terminal-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
  /terminal/consistency:
    get:
      tags:
      - terminal
      operationId: get-terminal-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal/count:
    get:
      tags:
      - terminal
      operationId: get-terminal-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal/count_report:
    post:
      tags:
      - terminal
      operationId: get-terminal-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /terminal:
    get:
      tags:
      - terminal
      operationId: get-terminal
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
    put:
      tags:
      - terminal
      summary: Update Terminal
      operationId: put-terminal-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - terminal
      summary: Create Terminal
      operationId: post-terminal-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - terminal
      summary: Delete Terminal
      operationId: delete-terminal-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /terminal/download:
    get:
      tags:
      - terminal
      operationId: get-terminal-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /terminal/elastic_mapping:
    get:
      tags:
      - terminal
      operationId: get-terminal-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal/get2:
    get:
      tags:
      - terminal
      operationId: get-terminal-by-realm
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
  /terminal/search:
    post:
      tags:
      - terminal
      operationId: post-terminal-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityTerminal'
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Terminal'
  /terminal/system_report:
    post:
      tags:
      - terminal
      summary: System Report
      operationId: post-terminal-intrac-system-report-address-com.deegle.intrac.core.verticle
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal/truncate:
    put:
      tags:
      - terminal
      operationId: put-terminal-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal_trip_payment/all:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
  /terminal_trip_payment/all_as_json:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
  /terminal_trip_payment/consistency:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal_trip_payment/count:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal_trip_payment/count_report:
    post:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalTripPaymentReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /terminal_trip_payment:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: terminal_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
    post:
      tags:
      - terminal_trip_payment
      summary: Create
      operationId: post-terminal-trip-payment-intrac-update-add-payments-address-com.deegle.intrac.core.verticle
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: terminal_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalTripPaymentRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - terminal_trip_payment
      summary: Delete
      operationId: delete-terminal-trip-payment-intrac-delete-address-com.deegle.intrac.core.verticle
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: terminal_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
  /terminal_trip_payment/delete:
    put:
      tags:
      - terminal_trip_payment
      summary: Delete Payments
      operationId: put-terminal-trip-payment-intrac-delete-payments-address-com.deegle.intrac.core.verticle
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: terminal_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/DeletePaymentRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /terminal_trip_payment/download:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /terminal_trip_payment/elastic_mapping:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal_trip_payment/get2:
    get:
      tags:
      - terminal_trip_payment
      operationId: get-terminal-trip-payment-by-realm-terminal-id-line-id-itinerary-id-trip-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: terminal_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
  /terminal_trip_payment/search:
    post:
      tags:
      - terminal_trip_payment
      operationId: post-terminal-trip-payment-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityTerminalTripPayment'
      responses:
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
  /terminal_trip_payment/system_report:
    post:
      tags:
      - terminal_trip_payment
      summary: System Report
      operationId: post-terminal-trip-payment-intrac-system-report-address-com.deegle.intrac.core.verticle
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalTripPaymentReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal_trip_payment/truncate:
    put:
      tags:
      - terminal_trip_payment
      operationId: put-terminal-trip-payment-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /terminal_trip_payment/validate:
    put:
      tags:
      - terminal_trip_payment
      summary: Validate
      operationId: put-terminal-trip-payment-intrac-validate-payments-address-com.deegle.intrac.core.verticle
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: terminal_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: trip_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              minItems: 1
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/NotificationPaymentValidationItem'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalTripPayment'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/admin_check:
    put:
      tags:
      - trip
      summary: Trip Admin check
      operationId: put-trip-admin-check-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: check
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/all:
    get:
      tags:
      - trip
      operationId: get-trip-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/all_as_json:
    get:
      tags:
      - trip
      operationId: get-trip-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/consistency:
    get:
      tags:
      - trip
      operationId: get-trip-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /trip/count:
    get:
      tags:
      - trip
      operationId: get-trip-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /trip/count_report:
    post:
      tags:
      - trip
      operationId: get-trip-count-report-request--operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripReportRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /trip:
    get:
      tags:
      - trip
      operationId: get-trip
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - trip
      summary: Update Trip
      operationId: put-trip-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - trip
      summary: Create Trip
      operationId: post-trip-intrac-create-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - trip
      summary: Delete Trip
      operationId: delete-trip-intrac-delete-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/line/{line_id}:
    get:
      tags:
      - trip
      summary: Get Trip by line
      operationId: get-trip-by-line-intrac-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - trip
      summary: Update Trip by line
      operationId: put-trip-by-line-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - trip
      summary: Create Trip by line
      operationId: post-trip-by-line-intrac-create-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - trip
      summary: Delete Trip by line
      operationId: delete-trip-by-line-intrac-delete-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/delete_all_reservations_and_passengers:
    delete:
      tags:
      - trip
      summary: Delete All Reservations And Passengers
      operationId: delete-all-reservations-passengers-trip-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/download:
    get:
      tags:
      - trip
      operationId: get-trip-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /trip/elastic_mapping:
    get:
      tags:
      - trip
      operationId: get-trip-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /trip/get2:
    get:
      tags:
      - trip
      operationId: get-trip-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/get3:
    get:
      tags:
      - trip
      operationId: get-trip-by-realm-business-id-itinerary-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/by_sequence:
    get:
      tags:
      - trip
      summary: Get Trip by sequence
      operationId: get-trip-by-sequence-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: sequence
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/sequence:
    get:
      tags:
      - trip
      summary: Get Trip Sequence
      operationId: get-sequence-counter-intrac-trip-get-operation-id
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
      responses:
        default:
          description: default response
          content:
            text/plain: {}
  /trip/intt_check:
    put:
      tags:
      - trip
      summary: Trip Intt check
      operationId: put-trip-intt-check-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: check
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/report/line:
    post:
      tags:
      - trip
      summary: Line Report
      operationId: post-line-trip-report-intrac-report-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /trip/online_sales_check:
    put:
      tags:
      - trip
      summary: Trip Online Sales check
      operationId: put-trip-online-sales-check-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: check
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/operation_check:
    put:
      tags:
      - trip
      summary: Trip Operation check
      operationId: put-trip-operation-check-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: check
        in: query
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/search:
    post:
      tags:
      - trip
      operationId: post-trip-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityTrip'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/suspend:
    put:
      tags:
      - trip
      summary: Suspend Trip
      operationId: put-suspend-trip-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/suspend/line/{line_id}:
    put:
      tags:
      - trip
      summary: Suspend Trip By Line
      operationId: put-trip-suspend-by-line-intrac-update-operation-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: itinerary_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /trip/system_report:
    post:
      tags:
      - trip
      summary: System Report
      operationId: post-system-report-trip-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TripReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /trip/truncate:
    put:
      tags:
      - trip
      operationId: put-trip-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /trip/update_missing_fields:
    put:
      tags:
      - trip
      summary: Update Trip
      operationId: put-update-missing-fields-intrac-operation-id
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Trip'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/all:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/all_as_json:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/consistency:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle/count:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle:
    get:
      tags:
      - vehicle
      operationId: get-vehicle
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - vehicle
      summary: Update Vehicle
      operationId: put-vehicle-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - vehicle
      summary: Create Vehicle
      operationId: post-vehicle-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - vehicle
      summary: Delete Vehicle
      operationId: delete-vehicle-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/line/{line_id}:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-from-terminal-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - vehicle
      summary: Update Vehicle from terminal
      operationId: put-vehicle-from-terminal-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - vehicle
      summary: Create Vehicle from terminal
      operationId: post-vehicle-from-terminal-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - vehicle
      summary: Delete Vehicle from terminal
      operationId: delete-vehicle-from-terminal-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/download:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /vehicle/elastic_mapping:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle/get2:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/get3:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-by-realm-business-id-owner-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/get4:
    get:
      tags:
      - vehicle
      operationId: get-vehicle-by-realm-business-id-owner-id-vehicle-type-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: owner_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: vehicle_type_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/report/line:
    post:
      tags:
      - vehicle
      summary: Line Report
      operationId: post-line-vehicle-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle/report:
    post:
      tags:
      - vehicle
      summary: Report
      operationId: post-report-vehicle-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle/search:
    post:
      tags:
      - vehicle
      operationId: post-vehicle-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityVehicle'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vehicle'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle/truncate:
    put:
      tags:
      - vehicle
      operationId: put-vehicle-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_owner/all:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_owner/all_as_json:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_owner/consistency:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_owner/count:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_owner:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - vehicle_owner
      summary: Update Vehicle Owner
      operationId: put-vehicle-owner-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - vehicle_owner
      summary: Create Vehicle Owner
      operationId: post-vehicle-owner-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - vehicle_owner
      summary: Delete Vehicle Owner
      operationId: delete-vehicle-owner-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_owner/line/{line_id}:
    get:
      tags:
      - vehicle_owner
      summary: Get Vehicle Owner from terminal
      operationId: get-vehicle-owner-from-terminal-intrac-get
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - vehicle_owner
      summary: Update Vehicle Owner from terminal
      operationId: put-vehicle-owner-from-terminal-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - vehicle_owner
      summary: Create Vehicle Owner from terminal
      operationId: post-vehicle-owner-from-terminal-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - vehicle_owner
      summary: Delete Vehicle Owner from terminal
      operationId: delete-vehicle-owner-from-terminal-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: line_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_owner/download:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /vehicle_owner/elastic_mapping:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_owner/get2:
    get:
      tags:
      - vehicle_owner
      operationId: get-vehicle-owner-by-realm-business-id
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_owner/report/line:
    post:
      tags:
      - vehicle_owner
      summary: Line Report
      operationId: post-line-vehicle-owner-report-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: business_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_owner/report:
    post:
      tags:
      - vehicle_owner
      summary: Report
      operationId: post-report-vehicle-owner-intrac-report
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleOwnerReportRequest'
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_owner/search:
    post:
      tags:
      - vehicle_owner
      operationId: post-vehicle-owner-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityVehicleOwner'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleOwner'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_owner/truncate:
    put:
      tags:
      - vehicle_owner
      operationId: put-vehicle-owner-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_type/all:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type-all--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleType'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_type/all_as_json:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type-all-as-json--operation-id
      parameters:
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleType'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_type/consistency:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type-consistency--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_type/count:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type-count--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_type:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleType'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    put:
      tags:
      - vehicle_type
      summary: Update Vehicle Type
      operationId: put-vehicle-type-intrac-update
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTypeRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleType'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    post:
      tags:
      - vehicle_type
      summary: Create Vehicle Type
      operationId: post-vehicle-type-intrac-create
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: user_id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      - name: user_email
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VehicleTypeRequest'
        required: true
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleType'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      tags:
      - vehicle_type
      summary: Delete Vehicle Type
      operationId: delete-vehicle-type-intrac-delete
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_type/download:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type-download--operation-id
      responses:
        default:
          description: default response
          content:
            application/octet-stream: {}
  /vehicle_type/elastic_mapping:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type-elastic-mapping--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /vehicle_type/get2:
    get:
      tags:
      - vehicle_type
      operationId: get-vehicle-type-by-realm
      parameters:
      - name: realm
        in: query
        required: true
        schema:
          minLength: 1
          pattern: ^\S*$
          type: string
      - name: page_size
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      - name: paging_state
        in: query
        schema:
          pattern: ^\S*$
          type: string
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleType'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_type/search:
    post:
      tags:
      - vehicle_type
      operationId: post-vehicle-type-search--operation-id
      parameters:
      - name: type
        in: query
        schema:
          type: string
          default: PAGINATE
          enum:
          - SEARCH
          - PAGINATE
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchEntityVehicleType'
      responses:
        "200":
          description: SUCCESS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleType'
        "202":
          description: ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /vehicle_type/truncate:
    put:
      tags:
      - vehicle_type
      operationId: put-vehicle-type-truncate--operation-id
      responses:
        default:
          description: default response
          content:
            application/json: {}
  /website_email:
    post:
      tags:
      - website_email
      summary: Send Email
      operationId: send-website-email-operation-id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsiteEmailRequest'
        required: true
      responses:
        default:
          description: default response
          content:
            application/json: {}
components:
  schemas:
    CurrencyExchangeRate:
      type: object
      properties:
        realm:
          type: string
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        id:
          type: string
          format: uuid
        rate:
          type: number
        created_at:
          type: string
          format: date-time
        created_by_email:
          type: string
        created_by:
          type: string
          format: uuid
    Message:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        cause:
          type: array
          items:
            type: string
    CurrencyExchangeRateReportRequest:
      type: object
      properties:
        currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        rate:
          $ref: '#/components/schemas/DecimalRangeRequest'
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        created_by_email:
          type: string
    DecimalRangeRequest:
      type: object
      properties:
        lte:
          type: number
        gte:
          type: number
    TimeRangeRequest:
      type: object
      properties:
        lte:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        time_zone:
          type: string
    QueryLevelEntityCurrencyExchangeRate:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/CurrencyExchangeRate'
    RangeEntity:
      type: object
      properties:
        name:
          type: string
        greaterThanEqual:
          type: object
        greaterThan:
          type: object
        lessThanEqual:
          type: object
        lessThan:
          type: object
        boost:
          type: number
          format: float
        format:
          type: string
        timeZone:
          type: string
    SearchEntityCurrencyExchangeRate:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityCurrencyExchangeRate'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CurrencyExchangeRate'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    Driver:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        name:
          type: string
        id_doc:
          type: string
        email:
          type: string
        phone:
          type: string
        active:
          type: boolean
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        info:
          $ref: '#/components/schemas/Info'
    Info:
      type: object
      properties:
        created_by:
          type: string
          format: uuid
        created_by_email:
          type: string
        created_at:
          type: string
          format: date-time
        updated_by:
          type: string
          format: uuid
        updated_by_email:
          type: string
        updated_at:
          type: string
          format: date-time
    DriverReportRequest:
      type: object
      properties:
        business_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        active:
          type: boolean
        line_start_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_expiration_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_active:
          type: boolean
        realm:
          uniqueItems: true
          type: array
          items:
            type: string
        driver:
          type: string
        line:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        if_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        if_not_exists:
          uniqueItems: true
          type: array
          items:
            type: string
    DriverRequest:
      required:
      - id_doc
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        email:
          maxLength: 2147483647
          minLength: 1
          pattern: "^([_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\\
            .[a-zA-Z]{1,6}))?$"
          type: string
        phone:
          maxLength: 2147483647
          minLength: 1
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        active:
          type: boolean
    QueryLevelEntityDriver:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Driver'
    SearchEntityDriver:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityDriver'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Driver'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    Fare:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        vehicle_type_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        name:
          type: string
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          type: number
        route_type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        rates:
          type: object
          additionalProperties:
            type: integer
            format: int64
        vehicle_type_name:
          type: string
        vehicle_type_capacity:
          type: integer
          format: int32
        vehicle_type_features:
          uniqueItems: true
          type: array
          items:
            type: string
        country:
          type: string
        start_stop_code:
          type: string
        start_stop_name:
          type: string
        start_stop_active:
          type: boolean
        destination_stop_code:
          type: string
        destination_stop_name:
          type: string
        destination_stop_active:
          type: boolean
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        info:
          $ref: '#/components/schemas/Info'
    FareReportRequest:
      type: object
      properties:
        business_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        vehicle_type_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        amount:
          $ref: '#/components/schemas/DecimalRangeRequest'
        route_type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        vehicle_type_capacity:
          $ref: '#/components/schemas/DecimalRangeRequest'
        start_stop_active:
          type: boolean
        destination_stop_active:
          type: boolean
        line_start_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_expiration_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_active:
          type: boolean
        realm:
          uniqueItems: true
          type: array
          items:
            type: string
        name:
          type: string
        vehicle_type:
          type: string
        line:
          type: string
        start_stop:
          type: string
        destination_stop:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        stops:
          uniqueItems: true
          type: array
          items:
            type: string
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        if_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        if_not_exists:
          uniqueItems: true
          type: array
          items:
            type: string
    FareRequest:
      required:
      - amount
      - currency
      - name
      - route_type
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          minimum: 0.00
          exclusiveMinimum: true
          type: number
        route_type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        rates:
          type: object
          additionalProperties:
            type: integer
            format: int64
    DeegleIntracFareToTextFileRequest:
      type: object
      properties:
        file_name:
          type: string
        separator:
          type: string
        value_to_replace_separator:
          type: string
        time_zone:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string
        date_formatter:
          type: object
          additionalProperties:
            type: string
        dictionary:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
        report_request:
          $ref: '#/components/schemas/FareReportRequest'
    QueryLevelEntityFare:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Fare'
    SearchEntityFare:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityFare'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Fare'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    Itinerary:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        name:
          type: string
        active:
          type: boolean
        type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        short_route_rate:
          type: number
        short_route_rate_currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        stops:
          type: array
          items:
            $ref: '#/components/schemas/StopInfo'
        info:
          $ref: '#/components/schemas/Info'
    StopInfo:
      type: object
      properties:
        country:
          type: string
        code:
          type: string
        name:
          type: string
        city:
          type: string
        active:
          type: boolean
    ItineraryReportRequest:
      type: object
      properties:
        business_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        active:
          type: boolean
        type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        short_route_rate:
          $ref: '#/components/schemas/DecimalRangeRequest'
        short_route_rate_currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        line_start_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_expiration_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_active:
          type: boolean
        realm:
          uniqueItems: true
          type: array
          items:
            type: string
        name:
          type: string
        line:
          type: string
        stop:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        if_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        if_not_exists:
          uniqueItems: true
          type: array
          items:
            type: string
    DeegleIntracItineraryToTextFileRequest:
      type: object
      properties:
        file_name:
          type: string
        separator:
          type: string
        value_to_replace_separator:
          type: string
        time_zone:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string
        date_formatter:
          type: object
          additionalProperties:
            type: string
        dictionary:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: string
        report_request:
          $ref: '#/components/schemas/ItineraryReportRequest'
    QueryLevelEntityItinerary:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Itinerary'
    SearchEntityItinerary:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityItinerary'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Itinerary'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    BankAccount:
      required:
      - active
      - bank
      - id_doc
      - number
      type: object
      properties:
        bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        number:
          maxLength: 20
          minLength: 20
          pattern: "^[0-9]*$"
          type: string
        id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        active:
          type: boolean
    Line:
      type: object
      properties:
        realm:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        code:
          type: string
        start_date:
          type: string
          format: date-time
        expiration_date:
          type: string
          format: date-time
        mode:
          type: string
        address:
          type: string
        active:
          type: boolean
        bank_accounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        mobile_payment:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MobilePayment'
        info:
          $ref: '#/components/schemas/Info'
    MobilePayment:
      required:
      - active
      - bank
      - id_doc
      - phone
      type: object
      properties:
        bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        phone:
          maxLength: 2147483647
          minLength: 1
          pattern: "^(414|424|416|426|412|422)[0-9]{7}$"
          type: string
        id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        active:
          type: boolean
    LineRequest:
      required:
      - code
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        code:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        start_date:
          type: string
          format: date-time
        expiration_date:
          type: string
          format: date-time
        mode:
          type: string
        active:
          type: boolean
        bank_accounts:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BankAccount'
        mobile_payment:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/MobilePayment'
    ReservationPaymentAggregateRequest:
      type: object
      properties:
        gte:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        departure_date:
          type: string
          format: date
        trip_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNPUBLISHED
            - PUBLISHED
            - IN_PROCESS
            - SUSPENDED
            - FINISHED
        status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - PENDING_PAYMENT
            - PENDING_VALIDATION
            - PAID
            - CANCELED
        payment_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - AUTHORIZED
            - PENDING_AUTHORIZATION
            - DELETED
        passenger_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - PRE_BOARDING
            - TRANSFERRED
            - BOARDING
            - OUT_INSIDE
            - OUT_OUTSIDE
            - DID_NOT_SHOWED_UP
            - CHANGED_TICKET
    QueryLevelEntityLine:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Line'
    SearchEntityLine:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityLine'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Line'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    CurrencyExchangeRateInfo:
      type: object
      properties:
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        id:
          type: string
          format: uuid
        rate:
          type: number
        created_at:
          type: string
          format: date-time
    DriverInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        id_doc:
          type: string
        email:
          type: string
        phone:
          type: string
        active:
          type: boolean
    FareInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          type: number
        route_type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        rates:
          type: object
          additionalProperties:
            type: integer
            format: int64
        country:
          type: string
        start_stop_code:
          type: string
        start_stop_name:
          type: string
        destination_stop_code:
          type: string
        destination_stop_name:
          type: string
    PassengerInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        id_doc:
          type: string
        email:
          type: string
        phone:
          type: string
        type:
          type: string
          enum:
          - INFANT
          - CHILD
          - ADULT
          - ELDERLY
          - SOCIAL_HELP
          - COURTESY
        amount_to_pay:
          type: number
        fare_id:
          type: string
          format: uuid
        fare_name:
          type: string
        fare_currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        fare_amount:
          type: number
        start_stop_code:
          type: string
        start_stop_name:
          type: string
        destination_stop_code:
          type: string
        destination_stop_name:
          type: string
    PaymentInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
        payment_method:
          type: string
          enum:
          - POS
          - MOBILE
          - TRANSFERENCE
          - CASH
        type:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          type: number
        amount_converted:
          type: object
          additionalProperties:
            type: number
        status:
          type: string
          enum:
          - AUTHORIZED
          - PENDING_AUTHORIZATION
          - DELETED
        date_of_payment:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        collector_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        collector_bank_account_number:
          type: string
        collector_id_doc:
          type: string
        collector_phone:
          type: string
        collector_reference:
          type: string
        payer_phone:
          type: string
        payer_reference:
          type: string
        payer_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        validated_at:
          type: string
          format: date-time
        validated_by_email:
          type: string
        validated_by:
          type: string
          format: uuid
        deleted_reason:
          type: string
        deleted_at:
          type: string
          format: date-time
        deleted_by_email:
          type: string
        deleted_by:
          type: string
          format: uuid
    Reservation:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        itinerary_id:
          type: string
          format: uuid
        trip_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        sequence:
          type: integer
          format: int64
        country:
          type: string
        number_of_passengers:
          type: integer
          format: int32
        channel:
          type: string
          enum:
          - OPEN
          - TICKET
          - FAST_ENTRY
        ip:
          type: string
        total:
          type: number
        total_by_currency:
          type: object
          additionalProperties:
            type: number
        rates:
          type: object
          additionalProperties:
            type: number
        currency_exchange_rates:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyExchangeRateInfo'
        itinerary_name:
          type: string
        vehicle_id:
          type: string
          format: uuid
        vehicle_license_plate:
          type: string
        vehicle_bodywork:
          type: string
        vehicle_brand:
          type: string
        vehicle_color:
          type: string
        vehicle_year:
          type: integer
          format: int32
        vehicle_owner_id:
          type: string
          format: uuid
        vehicle_owner_name:
          type: string
        vehicle_owner_id_doc:
          type: string
        vehicle_owner_email:
          type: string
        vehicle_owner_phone:
          type: string
        vehicle_owner_active:
          type: boolean
        vehicle_type_id:
          type: string
          format: uuid
        vehicle_type_name:
          type: string
        vehicle_type_capacity:
          type: integer
          format: int32
        vehicle_type_features:
          uniqueItems: true
          type: array
          items:
            type: string
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        trip_sequence:
          type: integer
          format: int64
        trip_departure_date:
          type: string
          format: date-time
        trip_seats_active:
          type: integer
          format: int32
        trip_active:
          type: boolean
        trip_status:
          type: string
          enum:
          - UNPUBLISHED
          - PUBLISHED
          - IN_PROCESS
          - SUSPENDED
          - FINISHED
        trip_type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        trip_boarding_gate:
          type: string
        trip_drivers:
          type: array
          items:
            $ref: '#/components/schemas/DriverInfo'
        trip_fares:
          type: array
          items:
            $ref: '#/components/schemas/FareInfo'
        passengers:
          type: array
          items:
            $ref: '#/components/schemas/PassengerInfo'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
        seats:
          uniqueItems: true
          type: array
          items:
            type: string
        status:
          type: string
          enum:
          - PENDING_PAYMENT
          - PENDING_VALIDATION
          - PAID
          - CANCELED
        info:
          $ref: '#/components/schemas/Info'
    NotificationPaymentRequest:
      required:
      - amount
      - collector_bank
      - collector_id_doc
      - currency
      - date_of_payment
      - payer_bank
      - payer_reference
      - payment_method
      type: object
      properties:
        payment_method:
          type: string
          enum:
          - POS
          - MOBILE
          - TRANSFERENCE
          - CASH
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          minimum: 0.00
          exclusiveMinimum: true
          type: number
        date_of_payment:
          type: string
          format: date
        collector_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        collector_bank_account_number:
          pattern: "^[0-9]*$"
          type: string
        collector_id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        collector_phone:
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        payer_phone:
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        payer_reference:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[A-Za-z0-9]+$"
          type: string
        payer_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
    PassengerRequest:
      required:
      - fare_id
      - name
      - type
      type: object
      properties:
        fare_id:
          type: string
          format: uuid
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        id_doc:
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        email:
          pattern: "^([_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\\
            .[a-zA-Z]{1,6}))?$"
          type: string
        phone:
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        type:
          type: string
          enum:
          - INFANT
          - CHILD
          - ADULT
          - ELDERLY
          - SOCIAL_HELP
          - COURTESY
        active:
          type: boolean
    Stop:
      type: object
      properties:
        realm:
          type: string
        country:
          type: string
        code:
          type: string
        name:
          type: string
        city:
          type: string
        active:
          type: boolean
        info:
          $ref: '#/components/schemas/Info'
    Trip:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        itinerary_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        sequence:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        short_route_rate:
          type: number
        short_route_rate_currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        short_route_rate_by_currency:
          type: object
          additionalProperties:
            type: number
        departure_date:
          type: string
          format: date-time
        seats_available:
          type: integer
          format: int32
        seats_active:
          type: integer
          format: int32
        active:
          type: boolean
        itinerary_name:
          type: string
        vehicle_id:
          type: string
          format: uuid
        vehicle_license_plate:
          type: string
        vehicle_bodywork:
          type: string
        vehicle_brand:
          type: string
        vehicle_color:
          type: string
        vehicle_year:
          type: integer
          format: int32
        vehicle_owner_id:
          type: string
          format: uuid
        vehicle_owner_name:
          type: string
        vehicle_owner_id_doc:
          type: string
        vehicle_owner_email:
          type: string
        vehicle_owner_phone:
          type: string
        vehicle_owner_active:
          type: boolean
        vehicle_type_id:
          type: string
          format: uuid
        vehicle_type_name:
          type: string
        vehicle_type_capacity:
          type: integer
          format: int32
        vehicle_type_features:
          uniqueItems: true
          type: array
          items:
            type: string
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        drivers:
          type: array
          items:
            $ref: '#/components/schemas/DriverInfo'
        fares:
          type: array
          items:
            $ref: '#/components/schemas/FareInfo'
        passenger_limits:
          type: object
          additionalProperties:
            type: integer
            format: int32
        passenger_limits_available:
          type: object
          additionalProperties:
            type: integer
            format: int32
        boarding_gate:
          type: string
        online_sales:
          type: boolean
        online_sales_updated_by:
          type: string
          format: uuid
        online_sales_updated_by_email:
          type: string
        online_sales_updated_by_at:
          type: string
          format: date-time
        admin_check:
          type: boolean
        admin_check_updated_by:
          type: string
          format: uuid
        admin_check_updated_by_email:
          type: string
        admin_check_updated_by_at:
          type: string
          format: date-time
        operation_check:
          type: boolean
        operation_check_updated_by:
          type: string
          format: uuid
        operation_check_updated_by_email:
          type: string
        operation_check_updated_by_at:
          type: string
          format: date-time
        intt_check:
          type: boolean
        intt_check_updated_by:
          type: string
          format: uuid
        intt_check_updated_by_email:
          type: string
        intt_check_updated_by_at:
          type: string
          format: date-time
        status_reason:
          type: string
        transfer_status:
          type: string
          enum:
          - TRANSFERRED
          - PARTIALLY_TRANSFERRED
          - NOT_TRANSFERRED
        status:
          type: string
          enum:
          - UNPUBLISHED
          - PUBLISHED
          - IN_PROCESS
          - SUSPENDED
          - FINISHED
        info:
          $ref: '#/components/schemas/Info'
    OpenTripReportRequest:
      type: object
      properties:
        line_id:
          type: string
          format: uuid
        itinerary_id:
          type: string
          format: uuid
        departure_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        seats_available:
          type: integer
          format: int32
        active:
          type: boolean
        itinerary_name:
          type: string
        boarding_gate:
          type: string
        online_sales:
          type: boolean
        admin_check:
          type: boolean
        operation_check:
          type: boolean
        intt_check:
          type: boolean
        type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        short_route_rate:
          $ref: '#/components/schemas/DecimalRangeRequest'
        short_route_rate_currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNPUBLISHED
            - PUBLISHED
            - IN_PROCESS
            - SUSPENDED
            - FINISHED
        transfer_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - TRANSFERRED
            - PARTIALLY_TRANSFERRED
            - NOT_TRANSFERRED
        status_reason:
          type: string
        currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        vehicle:
          type: string
        vehicle_owner:
          type: string
        vehicle_type:
          type: string
        line:
          type: string
        driver:
          type: string
        amount:
          $ref: '#/components/schemas/DecimalRangeRequest'
        sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        fare:
          type: string
        start_stop:
          type: string
        destination_stop:
          type: string
        start_stop_code:
          type: string
        destination_stop_code:
          type: string
        passenger_limits:
          type: object
          additionalProperties:
            type: integer
            format: int32
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
    Passenger:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        itinerary_id:
          type: string
          format: uuid
        trip_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        name:
          type: string
        id_doc:
          type: string
        email:
          type: string
        phone:
          type: string
        type:
          type: string
          enum:
          - INFANT
          - CHILD
          - ADULT
          - ELDERLY
          - SOCIAL_HELP
          - COURTESY
        active:
          type: boolean
        country:
          type: string
        reservation_id:
          type: string
          format: uuid
        reservation_sequence:
          type: integer
          format: int64
        reservation_channel:
          type: string
          enum:
          - OPEN
          - TICKET
          - FAST_ENTRY
        reservation_status:
          type: string
          enum:
          - PENDING_PAYMENT
          - PENDING_VALIDATION
          - PAID
          - CANCELED
        origin_line_id:
          type: string
          format: uuid
        origin_line_name:
          type: string
        origin_line_code:
          type: string
        origin_itinerary_id:
          type: string
          format: uuid
        origin_itinerary_name:
          type: string
        origin_trip_id:
          type: string
          format: uuid
        origin_trip_sequence:
          type: integer
          format: int64
        transfer_line_id:
          type: string
          format: uuid
        transfer_line_name:
          type: string
        transfer_line_code:
          type: string
        transfer_itinerary_id:
          type: string
          format: uuid
        transfer_itinerary_name:
          type: string
        transfer_trip_id:
          type: string
          format: uuid
        transfer_trip_sequence:
          type: integer
          format: int64
        amount_to_pay:
          type: number
        amount_to_pay_by_currency:
          type: object
          additionalProperties:
            type: number
        currency_exchange_rates:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyExchangeRateInfo'
        fare_id:
          type: string
          format: uuid
        fare_name:
          type: string
        fare_currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        fare_amount:
          type: number
        start_stop_code:
          type: string
        start_stop_name:
          type: string
        destination_stop_code:
          type: string
        destination_stop_name:
          type: string
        itinerary_name:
          type: string
        vehicle_id:
          type: string
          format: uuid
        vehicle_license_plate:
          type: string
        vehicle_bodywork:
          type: string
        vehicle_brand:
          type: string
        vehicle_color:
          type: string
        vehicle_year:
          type: integer
          format: int32
        vehicle_owner_id:
          type: string
          format: uuid
        vehicle_owner_name:
          type: string
        vehicle_owner_id_doc:
          type: string
        vehicle_owner_email:
          type: string
        vehicle_owner_phone:
          type: string
        vehicle_owner_active:
          type: boolean
        vehicle_type_id:
          type: string
          format: uuid
        vehicle_type_name:
          type: string
        vehicle_type_capacity:
          type: integer
          format: int32
        vehicle_type_features:
          uniqueItems: true
          type: array
          items:
            type: string
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        trip_sequence:
          type: integer
          format: int64
        trip_type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        trip_departure_date:
          type: string
          format: date-time
        trip_seats_active:
          type: integer
          format: int32
        trip_active:
          type: boolean
        trip_boarding_gate:
          type: string
        trip_drivers:
          type: array
          items:
            $ref: '#/components/schemas/DriverInfo'
        trip_fares:
          type: array
          items:
            $ref: '#/components/schemas/FareInfo'
        trip_status:
          type: string
          enum:
          - UNPUBLISHED
          - PUBLISHED
          - IN_PROCESS
          - SUSPENDED
          - FINISHED
        status:
          type: string
          enum:
          - PRE_BOARDING
          - TRANSFERRED
          - BOARDING
          - OUT_INSIDE
          - OUT_OUTSIDE
          - DID_NOT_SHOWED_UP
          - CHANGED_TICKET
        info:
          $ref: '#/components/schemas/Info'
    PassengerReportRequest:
      type: object
      properties:
        show_origin:
          type: boolean
        show_transfer:
          type: boolean
        line_id:
          type: string
          format: uuid
        itinerary_id:
          type: string
          format: uuid
        trip_id:
          type: string
          format: uuid
        reservation_id:
          type: string
          format: uuid
        origin_line_id:
          type: string
          format: uuid
        origin_itinerary_id:
          type: string
          format: uuid
        origin_trip_id:
          type: string
          format: uuid
        transfer_line_id:
          type: string
          format: uuid
        transfer_itinerary_id:
          type: string
          format: uuid
        transfer_trip_id:
          type: string
          format: uuid
        origin_line:
          type: string
        origin_itinerary:
          type: string
        origin_trip_sequence:
          type: integer
          format: int64
        transfer_line:
          type: string
        transfer_itinerary:
          type: string
        transfer_trip_sequence:
          type: integer
          format: int64
        passenger:
          type: string
        type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - INFANT
            - CHILD
            - ADULT
            - ELDERLY
            - SOCIAL_HELP
            - COURTESY
        status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - PRE_BOARDING
            - TRANSFERRED
            - BOARDING
            - OUT_INSIDE
            - OUT_OUTSIDE
            - DID_NOT_SHOWED_UP
            - CHANGED_TICKET
        reservation_sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        reservation_channel:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OPEN
            - TICKET
            - FAST_ENTRY
        reservation_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - PENDING_PAYMENT
            - PENDING_VALIDATION
            - PAID
            - CANCELED
        amount_to_pay:
          $ref: '#/components/schemas/DecimalRangeRequest'
        fare_name:
          type: string
        fare_currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        fare_amount:
          $ref: '#/components/schemas/DecimalRangeRequest'
        start_stop:
          type: string
        destination_stop:
          type: string
        trip_sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        trip_departure_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        trip_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNPUBLISHED
            - PUBLISHED
            - IN_PROCESS
            - SUSPENDED
            - FINISHED
        trip_boarding_gate:
          type: string
        trip_type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        itinerary_name:
          type: string
        vehicle:
          type: string
        vehicle_owner:
          type: string
        vehicle_type:
          type: string
        driver:
          type: string
        line:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
    QueryLevelEntityPassenger:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Passenger'
    SearchEntityPassenger:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityPassenger'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Passenger'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    TransferPassengerRequest:
      required:
      - destination_itinerary_id
      - destination_line_id
      - destination_trip_id
      - origin_itinerary_id
      - origin_trip_id
      - passengers
      type: object
      properties:
        origin_itinerary_id:
          type: string
          format: uuid
        origin_trip_id:
          type: string
          format: uuid
        destination_line_id:
          type: string
          format: uuid
        destination_itinerary_id:
          type: string
          format: uuid
        destination_trip_id:
          type: string
          format: uuid
        passengers:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    UpdatePassengerRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        id_doc:
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        email:
          pattern: "^([_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\\
            .[a-zA-Z]{1,6}))?$"
          type: string
        phone:
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
    Payment:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        itinerary_id:
          type: string
          format: uuid
        trip_id:
          type: string
          format: uuid
        reservation_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        reservation_sequence:
          type: integer
          format: int64
        reservation_channel:
          type: string
          enum:
          - OPEN
          - TICKET
          - FAST_ENTRY
        reservation_status:
          type: string
          enum:
          - PENDING_PAYMENT
          - PENDING_VALIDATION
          - PAID
          - CANCELED
        itinerary_name:
          type: string
        deleted_reason:
          type: string
        deleted_at:
          type: string
          format: date-time
        deleted_by_email:
          type: string
        deleted_by:
          type: string
          format: uuid
        validated_at:
          type: string
          format: date-time
        validated_by_email:
          type: string
        validated_by:
          type: string
          format: uuid
        payment_method:
          type: string
          enum:
          - POS
          - MOBILE
          - TRANSFERENCE
          - CASH
        type:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          type: number
        amount_converted:
          type: object
          additionalProperties:
            type: number
        status:
          type: string
          enum:
          - AUTHORIZED
          - PENDING_AUTHORIZATION
          - DELETED
        date_of_payment:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        collector_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        collector_bank_account_number:
          type: string
        collector_id_doc:
          type: string
        collector_phone:
          type: string
        collector_reference:
          type: string
        payer_phone:
          type: string
        payer_reference:
          type: string
        payer_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        line_name:
          type: string
        line_code:
          type: string
        line_mode:
          type: string
        line_address:
          type: string
        trip_sequence:
          type: integer
          format: int64
        trip_departure_date:
          type: string
          format: date-time
        trip_status:
          type: string
          enum:
          - UNPUBLISHED
          - PUBLISHED
          - IN_PROCESS
          - SUSPENDED
          - FINISHED
        trip_type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        trip_boarding_gate:
          type: string
    PaymentReportRequest:
      type: object
      properties:
        business_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        itinerary_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        trip_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        reservation_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        reservation_sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        reservation_channel:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OPEN
            - TICKET
            - FAST_ENTRY
        reservation_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - PENDING_PAYMENT
            - PENDING_VALIDATION
            - PAID
            - CANCELED
        deleted_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        deleted_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        validated_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        validated_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        payment_method:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - POS
            - MOBILE
            - TRANSFERENCE
            - CASH
        type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OFFLINE
            - ONLINE
        currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        amount:
          $ref: '#/components/schemas/DecimalRangeRequest'
        status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - AUTHORIZED
            - PENDING_AUTHORIZATION
            - DELETED
        date_of_payment:
          $ref: '#/components/schemas/TimeRangeRequest'
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        collector_bank:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - BDV
            - BVC
            - MERCANTIL
            - BBVA
            - BANCARIBE
            - EXTERIOR
            - BOD
            - CARONI
            - BANESCO
            - PLAZA
            - BFC
            - BANCO100
            - DEL_SUR
            - TESORO
            - BAV
            - BANCRECER
            - MI_BANCO
            - BANCAMIGA
            - BANPLUS
            - BICENTENARIO
            - BANFANB
            - BNC
        payer_bank:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - BDV
            - BVC
            - MERCANTIL
            - BBVA
            - BANCARIBE
            - EXTERIOR
            - BOD
            - CARONI
            - BANESCO
            - PLAZA
            - BFC
            - BANCO100
            - DEL_SUR
            - TESORO
            - BAV
            - BANCRECER
            - MI_BANCO
            - BANCAMIGA
            - BANPLUS
            - BICENTENARIO
            - BANFANB
            - BNC
        trip_sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        trip_departure_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        trip_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNPUBLISHED
            - PUBLISHED
            - IN_PROCESS
            - SUSPENDED
            - FINISHED
        trip_type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        realm:
          uniqueItems: true
          type: array
          items:
            type: string
        itinerary_name:
          type: string
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        if_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        if_not_exists:
          uniqueItems: true
          type: array
          items:
            type: string
    QueryLevelEntityPayment:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Payment'
    SearchEntityPayment:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityPayment'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    MobilePaymentRequest:
      required:
      - amount
      - collector_bank
      - collector_id_doc
      - collector_phone
      - currency
      - date_of_payment
      - payer_bank
      - payer_phone
      - payer_reference
      type: object
      properties:
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          minimum: 0.00
          exclusiveMinimum: true
          type: number
        date_of_payment:
          type: string
          format: date
        collector_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        collector_id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        collector_phone:
          maxLength: 2147483647
          minLength: 1
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        payer_phone:
          maxLength: 2147483647
          minLength: 1
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        payer_reference:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[A-Za-z0-9]+$"
          type: string
        payer_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
    SimplePayment:
      required:
      - amount
      - currency
      type: object
      properties:
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          minimum: 0.00
          exclusiveMinimum: true
          type: number
    TicketPaymentRequest:
      type: object
      properties:
        seats:
          maxItems: 2147483647
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
        cash_payments:
          type: array
          items:
            $ref: '#/components/schemas/SimplePayment'
        pos_payments:
          type: array
          items:
            $ref: '#/components/schemas/SimplePayment'
        mobile_payments:
          type: array
          items:
            $ref: '#/components/schemas/MobilePaymentRequest'
        transfer_payments:
          type: array
          items:
            $ref: '#/components/schemas/TransferPaymentRequest'
    TransferPaymentRequest:
      required:
      - amount
      - collector_bank
      - collector_bank_account_number
      - collector_id_doc
      - currency
      - date_of_payment
      - payer_bank
      - payer_reference
      type: object
      properties:
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          minimum: 0.00
          exclusiveMinimum: true
          type: number
        date_of_payment:
          type: string
          format: date
        collector_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        collector_bank_account_number:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[0-9]*$"
          type: string
        collector_id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        payer_reference:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[A-Za-z0-9]+$"
          type: string
        payer_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
    ReservationReportRequest:
      type: object
      properties:
        itinerary_id:
          type: string
          format: uuid
        trip_id:
          type: string
          format: uuid
        line_id:
          type: string
          format: uuid
        number_of_passengers:
          $ref: '#/components/schemas/DecimalRangeRequest'
        total:
          $ref: '#/components/schemas/DecimalRangeRequest'
        ip:
          type: string
        channel:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OPEN
            - TICKET
            - FAST_ENTRY
        sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        trip_sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        trip_departure_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        trip_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNPUBLISHED
            - PUBLISHED
            - IN_PROCESS
            - SUSPENDED
            - FINISHED
        trip_boarding_gate:
          type: string
        trip_type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        itinerary_name:
          type: string
        vehicle:
          type: string
        vehicle_owner:
          type: string
        vehicle_type:
          type: string
        line:
          type: string
        driver:
          type: string
        passenger:
          type: string
        fare:
          type: string
        start_stop:
          type: string
        destination_stop:
          type: string
        payment_method:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - POS
            - MOBILE
            - TRANSFERENCE
            - CASH
        status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - PENDING_PAYMENT
            - PENDING_VALIDATION
            - PAID
            - CANCELED
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
    DeletePaymentRequest:
      required:
      - payment_id
      - reason
      type: object
      properties:
        payment_id:
          type: string
          format: uuid
        reason:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
    QueryLevelEntityReservation:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Reservation'
    SearchEntityReservation:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityReservation'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Reservation'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    NotificationPaymentValidationItem:
      required:
      - collector_reference
      - payment_id
      type: object
      properties:
        payment_id:
          type: string
          format: uuid
        collector_reference:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[A-Za-z0-9]+$"
          type: string
    NotificationPaymentValidationRequest:
      type: object
      properties:
        seats:
          maxItems: 2147483647
          minItems: 1
          uniqueItems: true
          type: array
          items:
            type: string
        payments:
          maxItems: 2147483647
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotificationPaymentValidationItem'
    ShortRoutePrice:
      type: object
      properties:
        realm:
          type: string
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        id:
          type: string
          format: uuid
        price:
          type: number
        created_at:
          type: string
          format: date-time
        created_by_email:
          type: string
        created_by:
          type: string
          format: uuid
    ShortRoutePriceReportRequest:
      type: object
      properties:
        currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        price:
          $ref: '#/components/schemas/DecimalRangeRequest'
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        created_by_email:
          type: string
        created_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
    QueryLevelEntityShortRoutePrice:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/ShortRoutePrice'
    SearchEntityShortRoutePrice:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityShortRoutePrice'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ShortRoutePrice'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    StopRequest:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        city:
          type: string
        active:
          type: boolean
    QueryLevelEntityStop:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Stop'
    SearchEntityStop:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityStop'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Stop'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    Terminal:
      type: object
      properties:
        realm:
          type: string
        id:
          type: string
          format: uuid
        business_id:
          type: string
          format: uuid
        business_name:
          type: string
        business_email:
          type: string
        business_id_doc:
          type: string
        name:
          type: string
        id_doc:
          type: string
        phone:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        address:
          type: string
        active:
          type: boolean
        info:
          $ref: '#/components/schemas/Info'
    TerminalReportRequest:
      type: object
      properties:
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        business_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        active:
          type: boolean
        realm:
          uniqueItems: true
          type: array
          items:
            type: string
        business:
          type: string
        terminal:
          type: string
        location:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        if_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        if_not_exists:
          uniqueItems: true
          type: array
          items:
            type: string
    TerminalRequest:
      required:
      - id_doc
      - name
      - phone
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        phone:
          maxLength: 2147483647
          minLength: 1
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        address:
          type: string
        active:
          type: boolean
    QueryLevelEntityTerminal:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Terminal'
    SearchEntityTerminal:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityTerminal'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Terminal'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    TerminalTripPayment:
      type: object
      properties:
        realm:
          type: string
        terminal_id:
          type: string
          format: uuid
        line_id:
          type: string
          format: uuid
        itinerary_id:
          type: string
          format: uuid
        trip_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        business_id:
          type: string
          format: uuid
        business_name:
          type: string
        business_email:
          type: string
        business_id_doc:
          type: string
        terminal_name:
          type: string
        terminal_id_doc:
          type: string
        terminal_phone:
          type: string
        terminal_country:
          type: string
        terminal_state:
          type: string
        terminal_city:
          type: string
        terminal_address:
          type: string
        itinerary_name:
          type: string
        line_name:
          type: string
        line_id_doc:
          type: string
        line_code:
          type: string
        line_mode:
          type: string
        line_address:
          type: string
        trip_sequence:
          type: integer
          format: int64
        trip_departure_date:
          type: string
          format: date-time
        trip_status:
          type: string
          enum:
          - UNPUBLISHED
          - PUBLISHED
          - IN_PROCESS
          - SUSPENDED
          - FINISHED
        trip_type:
          type: string
          enum:
          - LONG_ROUTE
          - SHORT_ROUTE
        trip_boarding_gate:
          type: string
        deleted_reason:
          type: string
        deleted_at:
          type: string
          format: date-time
        deleted_by_email:
          type: string
        deleted_by:
          type: string
          format: uuid
        validated_at:
          type: string
          format: date-time
        validated_by_email:
          type: string
        validated_by:
          type: string
          format: uuid
        payment_method:
          type: string
          enum:
          - POS
          - MOBILE
          - TRANSFERENCE
          - CASH
        type:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        currency:
          type: string
          enum:
          - VES
          - VED
          - USD
          - EUR
          - PTR
        amount:
          type: number
        amount_converted:
          type: object
          additionalProperties:
            type: number
        status:
          type: string
          enum:
          - AUTHORIZED
          - PENDING_AUTHORIZATION
          - DELETED
        date_of_payment:
          type: string
          format: date
        created_at:
          type: string
          format: date-time
        created_by_email:
          type: string
        created_by:
          type: string
          format: uuid
        collector_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
        collector_bank_account_number:
          type: string
        collector_id_doc:
          type: string
        collector_phone:
          type: string
        collector_reference:
          type: string
        payer_phone:
          type: string
        payer_reference:
          type: string
        payer_bank:
          type: string
          enum:
          - BDV
          - BVC
          - MERCANTIL
          - BBVA
          - BANCARIBE
          - EXTERIOR
          - BOD
          - CARONI
          - BANESCO
          - PLAZA
          - BFC
          - BANCO100
          - DEL_SUR
          - TESORO
          - BAV
          - BANCRECER
          - MI_BANCO
          - BANCAMIGA
          - BANPLUS
          - BICENTENARIO
          - BANFANB
          - BNC
    TerminalTripPaymentReportRequest:
      type: object
      properties:
        terminal_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        line_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        itinerary_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        trip_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        business_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        trip_sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        trip_departure_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        trip_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNPUBLISHED
            - PUBLISHED
            - IN_PROCESS
            - SUSPENDED
            - FINISHED
        trip_type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        deleted_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        deleted_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        validated_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        validated_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        payment_method:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - POS
            - MOBILE
            - TRANSFERENCE
            - CASH
        type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - OFFLINE
            - ONLINE
        currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        amount:
          $ref: '#/components/schemas/DecimalRangeRequest'
        status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - AUTHORIZED
            - PENDING_AUTHORIZATION
            - DELETED
        date_of_payment:
          $ref: '#/components/schemas/TimeRangeRequest'
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        created_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        collector_bank:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - BDV
            - BVC
            - MERCANTIL
            - BBVA
            - BANCARIBE
            - EXTERIOR
            - BOD
            - CARONI
            - BANESCO
            - PLAZA
            - BFC
            - BANCO100
            - DEL_SUR
            - TESORO
            - BAV
            - BANCRECER
            - MI_BANCO
            - BANCAMIGA
            - BANPLUS
            - BICENTENARIO
            - BANFANB
            - BNC
        payer_bank:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - BDV
            - BVC
            - MERCANTIL
            - BBVA
            - BANCARIBE
            - EXTERIOR
            - BOD
            - CARONI
            - BANESCO
            - PLAZA
            - BFC
            - BANCO100
            - DEL_SUR
            - TESORO
            - BAV
            - BANCRECER
            - MI_BANCO
            - BANCAMIGA
            - BANPLUS
            - BICENTENARIO
            - BANFANB
            - BNC
        realm:
          uniqueItems: true
          type: array
          items:
            type: string
        terminal:
          type: string
        business:
          type: string
        line:
          type: string
        trip_boarding_gate:
          type: string
        itinerary_name:
          type: string
        deleted_reason:
          type: string
        deleted_by_email:
          type: string
        validated_by_email:
          type: string
        created_by_email:
          type: string
        collector_bank_account_number:
          type: string
        collector_reference:
          type: string
        payer_reference:
          type: string
        payer_phone:
          type: string
        collector:
          type: string
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        if_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        if_not_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        sorts:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
    TerminalTripPaymentRequest:
      type: object
      properties:
        cash_payments:
          type: array
          items:
            $ref: '#/components/schemas/SimplePayment'
        pos_payments:
          type: array
          items:
            $ref: '#/components/schemas/SimplePayment'
        mobile_payments:
          type: array
          items:
            $ref: '#/components/schemas/MobilePaymentRequest'
        transfer_payments:
          type: array
          items:
            $ref: '#/components/schemas/TransferPaymentRequest'
    QueryLevelEntityTerminalTripPayment:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/TerminalTripPayment'
    SearchEntityTerminalTripPayment:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityTerminalTripPayment'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TerminalTripPayment'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    TripReportRequest:
      type: object
      properties:
        business_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        itinerary_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        sequence:
          $ref: '#/components/schemas/DecimalRangeRequest'
        type:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - LONG_ROUTE
            - SHORT_ROUTE
        short_route_rate:
          $ref: '#/components/schemas/DecimalRangeRequest'
        short_route_rate_currency:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - VES
            - VED
            - USD
            - EUR
            - PTR
        departure_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        seats_available:
          $ref: '#/components/schemas/DecimalRangeRequest'
        seats_active:
          $ref: '#/components/schemas/DecimalRangeRequest'
        active:
          type: boolean
        vehicle_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        vehicle_year:
          $ref: '#/components/schemas/DecimalRangeRequest'
        vehicle_owner_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        vehicle_owner_active:
          type: boolean
        vehicle_type_id:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        vehicle_type_capacity:
          $ref: '#/components/schemas/DecimalRangeRequest'
        line_start_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_expiration_date:
          $ref: '#/components/schemas/TimeRangeRequest'
        line_active:
          type: boolean
        online_sales:
          type: boolean
        online_sales_updated_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        online_sales_updated_by_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        admin_check:
          type: boolean
        admin_check_updated_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        admin_check_updated_by_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        operation_check:
          type: boolean
        operation_check_updated_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        operation_check_updated_by_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        intt_check:
          type: boolean
        intt_check_updated_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        intt_check_updated_by_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        transfer_status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - TRANSFERRED
            - PARTIALLY_TRANSFERRED
            - NOT_TRANSFERRED
        status:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - UNPUBLISHED
            - PUBLISHED
            - IN_PROCESS
            - SUSPENDED
            - FINISHED
        realm:
          uniqueItems: true
          type: array
          items:
            type: string
        itinerary_name:
          type: string
        line:
          type: string
        start_stop:
          type: string
        destination_stop:
          type: string
        vehicle:
          type: string
        vehicle_owner:
          type: string
        vehicle_type:
          type: string
        driver:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
        created_by_email:
          type: string
        created_by:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        if_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        if_not_exists:
          uniqueItems: true
          type: array
          items:
            type: string
        sorts:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
    TripRequest:
      required:
      - departure_date
      - seats_active
      - status
      - vehicle_id
      type: object
      properties:
        vehicle_id:
          type: string
          format: uuid
        departure_date:
          type: string
          format: date-time
        seats_active:
          minimum: 1
          type: integer
          format: int32
        active:
          type: boolean
        status:
          type: string
          enum:
          - UNPUBLISHED
          - PUBLISHED
          - IN_PROCESS
          - SUSPENDED
          - FINISHED
        status_reason:
          type: string
        drivers:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        fares:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        passenger_limits:
          type: object
          additionalProperties:
            type: integer
            format: int32
        boarding_gate:
          type: string
        online_sales:
          type: boolean
    QueryLevelEntityTrip:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Trip'
    SearchEntityTrip:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityTrip'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Trip'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    Vehicle:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        owner_id:
          type: string
          format: uuid
        vehicle_type_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        license_plate:
          type: string
        bodywork:
          type: string
        brand:
          type: string
        color:
          type: string
        year:
          type: integer
          format: int32
        owner_name:
          type: string
        owner_id_doc:
          type: string
        owner_email:
          type: string
        owner_phone:
          type: string
        owner_active:
          type: boolean
        vehicle_type_name:
          type: string
        capacity:
          type: integer
          format: int32
        features:
          uniqueItems: true
          type: array
          items:
            type: string
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        info:
          $ref: '#/components/schemas/Info'
    VehicleRequest:
      required:
      - brand
      - color
      - license_plate
      type: object
      properties:
        license_plate:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        bodywork:
          type: string
        brand:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        color:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        year:
          type: integer
          format: int32
    VehicleReportRequest:
      type: object
      properties:
        license_plate:
          type: string
        bodywork:
          type: string
        brand:
          type: string
        color:
          type: string
        year:
          $ref: '#/components/schemas/DecimalRangeRequest'
        owner:
          type: string
        vehicle_type_name:
          type: string
        capacity:
          $ref: '#/components/schemas/DecimalRangeRequest'
        features:
          type: string
        line:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
    QueryLevelEntityVehicle:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/Vehicle'
    SearchEntityVehicle:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityVehicle'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Vehicle'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    VehicleOwner:
      type: object
      properties:
        realm:
          type: string
        business_id:
          type: string
          format: uuid
        id:
          type: string
          format: uuid
        name:
          type: string
        id_doc:
          type: string
        email:
          type: string
        phone:
          type: string
        active:
          type: boolean
        line_name:
          type: string
        line_code:
          type: string
        line_start_date:
          type: string
          format: date-time
        line_expiration_date:
          type: string
          format: date-time
        line_mode:
          type: string
        line_address:
          type: string
        line_active:
          type: boolean
        info:
          $ref: '#/components/schemas/Info'
    VehicleOwnerRequest:
      required:
      - id_doc
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        id_doc:
          maxLength: 2147483647
          minLength: 1
          pattern: "^[V|J|C|E|G|P|R|F|I][0-9]{9}$"
          type: string
        email:
          maxLength: 2147483647
          minLength: 1
          pattern: "^([_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\\
            .[a-zA-Z]{1,6}))?$"
          type: string
        phone:
          maxLength: 2147483647
          minLength: 1
          pattern: "^(414|424|416|426|412|422|212)[0-9]{7}$"
          type: string
        active:
          type: boolean
    VehicleOwnerReportRequest:
      type: object
      properties:
        name:
          type: string
        id_doc:
          type: string
        email:
          type: string
        phone:
          type: string
        active:
          type: boolean
        line:
          type: string
        created_at:
          $ref: '#/components/schemas/TimeRangeRequest'
    QueryLevelEntityVehicleOwner:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/VehicleOwner'
    SearchEntityVehicleOwner:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityVehicleOwner'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VehicleOwner'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    VehicleType:
      type: object
      properties:
        realm:
          type: string
        id:
          type: string
          format: uuid
        name:
          type: string
        capacity:
          type: integer
          format: int32
        features:
          uniqueItems: true
          type: array
          items:
            type: string
        info:
          $ref: '#/components/schemas/Info'
    VehicleTypeRequest:
      required:
      - capacity
      - name
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        capacity:
          minimum: 1
          type: integer
          format: int32
        features:
          uniqueItems: true
          type: array
          items:
            type: string
    QueryLevelEntityVehicleType:
      type: object
      properties:
        level:
          type: string
          enum:
          - OR
          - AND
        entity:
          $ref: '#/components/schemas/VehicleType'
    SearchEntityVehicleType:
      type: object
      properties:
        rangeLevel:
          type: string
          enum:
          - OR
          - AND
        entities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/QueryLevelEntityVehicleType'
        nots:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/VehicleType'
        from:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        sort:
          type: object
          additionalProperties:
            type: string
            enum:
            - asc
            - desc
        includes:
          uniqueItems: true
          type: array
          items:
            type: string
        excludes:
          uniqueItems: true
          type: array
          items:
            type: string
        ranges:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/RangeEntity'
    WebsiteEmailRequest:
      required:
      - email
      - message
      - name
      - subject
      type: object
      properties:
        name:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        email:
          maxLength: 2147483647
          minLength: 1
          pattern: "^([_a-zA-Z0-9-]+(\\.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]+)*(\\\
            .[a-zA-Z]{1,6}))?$"
          type: string
        subject:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
        message:
          maxLength: 2147483647
          minLength: 1
          pattern: ^(?!\s*$).+
          type: string
